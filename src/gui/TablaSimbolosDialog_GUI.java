/**
 * UNIVERSIDAD DE SAN CARLOS DE GUATEMALA
 * FACULTAD DE INGENIERIA
 * ESCUELA DE CIENCIAS Y SISTEMAS
 * COMPILADORES 1
 * PROYECTO 1
 * Creado el 21 de septiembre 2011, 07:10AM
 */


package gui;

import java.util.*;
import gameworld.*;
import gameworld.actors.*;
import javax.swing.table.*;
/*
 * Muestra la tabla de simbolos
 * @(#)TablaSimbolosDialog_GUI.java
 * Proyecto1_200819312 application
 * @author David Y. Gonzalez
 */
public class TablaSimbolosDialog_GUI extends javax.swing.JDialog {
    
    
    private static final String[] title = new String[]{"x-nombre", "x-tipo", "x-descripcion", "x-imagen", "x-vida", "x-destruir", "x-uso", "x-alcance", "x-credito", "x-color"};
    private final Object[][] cuerpo;
    /** Creates new form TablaSimbolos_GUI */
    public TablaSimbolosDialog_GUI(java.awt.Frame parent, boolean modal, analisis.TablaSimbolos tablasimbolos) {
        super(parent, modal);
        
        
        if (tablasimbolos == null) {
            cuerpo = new String [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
            };
            initComponents();
            return;
        }
        int max = tablasimbolos.size();
        cuerpo = new Object[max][10];
        Iterator<String> keys = tablasimbolos.getTabla().keySet().iterator();
        for (int i = 0; keys.hasNext(); i++){
            String llave = keys.next();
            Box actor = tablasimbolos.get(llave);
            cuerpo[i] = getDataOutOfBox(actor);
        }
        initComponents();
    }
    /**
     * 
     * Devuelve un vector con cadenas representando al Box
     * @param actor Objeto a extraerle informacion
     * @return Vector 
     **/
    public final String[] getDataOutOfBox(Box actor){
        String na = "NA";
        String[] ret = new String[]{na, na, na, na, na, na, na, na, na, na};
        ret[0] = actor.getX_nombre();
        ret[1] = actor.getX_tipo();
        ret[2] = actor.getX_descripcion();
        ret[3] = actor.getX_imagen();
        if (actor instanceof Bomba){
            ret[5] = String.valueOf(((Bomba)actor).getX_destruir());
        }else if (actor instanceof Heroe){
            Heroe h = (Heroe) actor;
            ret[4] = String.valueOf(h.getX_vida());
            ret[5] = String.valueOf(h.getX_destruir());
        }else if (actor instanceof Villano){
            Villano v = (Villano) actor;
            ret[4] = String.valueOf(v.getX_vida());
            ret[5] = String.valueOf(v.getX_destruir());
        } else if (actor instanceof Arma){
            Arma a = (Arma) actor;
            ret[5] = String.valueOf(a.getX_destruir());
            ret[6] = String.valueOf(a.getX_uso());
            ret[7] = String.valueOf(a.getX_alcance());
        } else if (actor instanceof Bonus){
            ret[8] = String.valueOf(((Bonus)actor).getX_creditos());
        } else if (actor instanceof Bloque){
            ret[9] = ((Bloque)actor).getX_color().getDescripcion();
        }
        return ret;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jtTS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JBadMeth - Tabla de s√≠mbolos");
        setMinimumSize(new java.awt.Dimension(1200, 720));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jtTS.setModel(new DefaultTableModel(cuerpo,title));
        jtTS.setPreferredSize(new java.awt.Dimension(800, 500));
        jScrollPane1.setViewportView(jtTS);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 160;
        gridBagConstraints.ipady = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 25, 25);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel1.setBackground(new java.awt.Color(51, 255, 255));
        jLabel1.setText("NA: No Aplica");
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtTS;
    // End of variables declaration//GEN-END:variables
}
